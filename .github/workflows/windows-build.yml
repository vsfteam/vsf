name: vsf windows build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  windows-build:

    strategy:
      fail-fast: false
      matrix:
        solution_path: [./example/template/project/vc/vsf_template.sln, ./example/tgui/project/vc/vsf_tgui.sln]
        build_config: [Debug]
        # https://docs.microsoft.com/en-us/visualstudio/install/visual-studio-build-numbers-and-release-dates?view=vs-2019
        # https://docs.microsoft.com/en-us/visualstudio/install/visual-studio-build-numbers-and-release-dates?view=vs-2022
        vs-version: ['[16.0, 17)', '[17.0, 18)']
        os: [windows-2019, windows-2022]
        exclude:
            - os: windows-2019
              vs-version: '[17.0, 18)'
            - os: windows-2022
              vs-version: '[16.0, 17)'

    runs-on: ${{ matrix.os }}

    steps:
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      with:
        vs-version: ${{ matrix.vs-version }}

    - name: Checkout With Submodule
      uses: actions/checkout@v2
      with:
        submodules: true # without recursive

    - name: Fixed NPCAP DLL Missing
      if : ${{ matrix. solution_path == './example/template/project/vc/vsf_template.sln' }}
      run: |
        sed -i '/VSF_NETDRV_USE_WPCAP/s/ENABLED/DISABLED/' example/template/config/vsf_usr_cfg/vsf_usr_cfg_win.h
      shell: bash

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{matrix.solution_path}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{matrix.build_config}} ${{matrix.solution_path}}

    - name: Prepare Test
      if : ${{ matrix. solution_path == './example/template/project/vc/vsf_template.sln' }}
      run: |
        cp example/template/project/vc/lib/{SDL2/lib/x86/SDL2.dll,libwdi/libwdi.dll} example/template/project/vc/vsf_template_win/Debug
        pip install pytest pytest-bdd wexpect simple-hexdump
      shell: bash

    - name: Test
      if : ${{ matrix. solution_path == './example/template/project/vc/vsf_template.sln' }}
      run: |
        pytest -m "base or windows-only" --verbose -o log_cli=true --log-cli-level="DEBUG" --vsf_template=${{github.workspace}}\example\template\project\vc\vsf_template_win\Debug\vsf_template_win.exe
      working-directory: ${{github.workspace}}/test/pytest
